(()=>{"use strict";var __webpack_modules__={828:()=>{eval('\n;// CONCATENATED MODULE: ./src/modules/functions.js\n  // преобразование даты к виду ДД.ММ.ГГГГ\r\n  const convertDate = (data) => {\r\n      let date = new Date(data)\r\n\r\n      let day = date.getDate()\r\n      if (day < 10) {\r\n          day = \'0\' + day\r\n      }\r\n      let month = date.getMonth() + 1\r\n      if (month < 10) {\r\n          month = \'0\' + month\r\n      }\r\n      let year = date.getFullYear()\r\n\r\n      return  day + \'.\' + month + \'.\' + year\r\n  }\r\n\r\n\r\n  // вычисление номера недели (четная - нечетная)\r\n  const getWeek = (current, start) => {\r\n      let currentDate = new Date(current)\r\n      let startDate = new Date(start)\r\n\r\n      let dayOfWeekOfStartDate = startDate.getDay()\r\n      if (dayOfWeekOfStartDate == 0) dayOfWeekOfStartDate = 7\r\n\r\n      let numberOfDays = Math.floor((currentDate - startDate) / (24 * 60 * 60 * 1000)) + 1\r\n      let weekNumber = Math.ceil(( numberOfDays + dayOfWeekOfStartDate - 1) / 7)\r\n\r\n      return weekNumber % 2 === 0 ? \'even\' : \'odd\'\r\n  }\r\n\r\n\r\n  // получение названия дня недели\r\n  function getWeekDayAbbr(data) {\r\n      let date = new Date(data)\r\n\r\n      let days = [\'н\', \'пн\', \'в\', \'c\', \'ч\', \'пт\', \'сб\']\r\n\r\n      return days[date.getDay()]\r\n  }\r\n\r\n  // получение названия месяца\r\n  const getMonthName = (date) => {\r\n      const months = [\'січня\', \'лютого\', \'березня\', \'квітня\', \'травня\', \'червня\', \'липня\', \'серпня\', \'вересня\', \'жовтня\', \'листопада\', \'грудня\']\r\n\r\n      return months[date.getMonth()]\r\n  }\r\n\r\n\n;// CONCATENATED MODULE: ./src/modules/holidays/vacations.js\n\r\n\r\nconst vacations = [\r\n  {\r\n    name: "fall",\r\n    startDate: "2024-10-28",\r\n    endDate: "2024-11-03",\r\n    dates: [],\r\n  },\r\n  {\r\n    name: "winter",\r\n    startDate: "2024-12-30",\r\n    endDate: "2025-01-12",\r\n    dates: [],\r\n  },\r\n  {\r\n    name: "spring",\r\n    startDate: "2025-03-24",\r\n    endDate: "2025-03-30",\r\n    dates: [],\r\n  },\r\n]\r\n\r\n// заполнение массива дат для определенных каникул\r\nconst createArrayDates = (vacationName) => {\r\n  let foundVacation = vacations.find((item) => item.name == vacationName)\r\n  foundVacation.dates = []\r\n  for (let i = Date.parse(foundVacation.startDate); i <= Date.parse(foundVacation.endDate);i = i + 1000 * 3600 * 24\r\n  ) {\r\n    foundVacation.dates.push(i)\r\n  }\r\n}\r\n\r\ncreateArrayDates("fall")\r\ncreateArrayDates("winter")\r\ncreateArrayDates("spring")\r\n\r\n//===== Формирование массива дат всех каникул ===========\r\nlet arrVacations = []\r\nconst createArrVacations = () => {\r\n  arrVacations = []\r\n  vacations.forEach((item) => {\r\n    arrVacations = arrVacations.concat(item.dates)\r\n  })\r\n}\r\n\r\ncreateArrVacations()\r\n\r\n// выаод каникул на странице\r\nfor (let item of vacations) {\r\n  document.getElementById("vacations").innerHTML += `\r\n        <div class="d-flex justify-content-between align-items-center mb-2">\r\n            <div>з <span>${convertDate(item.startDate)}</span> до <span>${convertDate(item.endDate)}</span> </div>\r\n            <div>\r\n                <button type="button" class="btn btn-primary" name="btnEditVacation" data-vacation-name=\'${item.name}\' data-bs-toggle="modal" data-bs-target="#modalEditVacationDates">\r\n                    <i class="bi bi-pencil-square"></i>\r\n                </button>\r\n                <button type="button" class="btn btn-primary" name="btnDeleteVacation" data-vacation-name=\'${item.name}\' data-bs-toggle="modal" data-bs-target="#modalDeleteVacation">\r\n                    <i class="bi bi-x-square"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    `\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/modules/holidays/vacation-delete.js\n\r\n\r\nlet vacationName\r\nlet divVacation\r\n\r\nconst clickBtnDeleteVacation = () => {\r\n  for (let btn of document.getElementsByName("btnDeleteVacation")) {\r\n    btn.addEventListener("click", () => {\r\n      vacationName = btn.dataset.vacationName\r\n      divVacation = btn.parentElement.parentElement\r\n    })\r\n  }\r\n}\r\nclickBtnDeleteVacation()\r\n\r\nconst deleteVacation = (vacationName) => {\r\n  let foundVacation = vacations.findIndex((item) => item.name == vacationName)\r\n  vacations.splice(foundVacation, 1)\r\n  divVacation.remove()\r\n}\r\n\r\ndocument.getElementById("btnConfirmDeleteVacation").addEventListener("click", () => {\r\n    deleteVacation(vacationName)\r\n    createArrVacations()\r\n  })\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/modules/holidays/vacation-edit.js\n\r\n\r\n\r\nconst editVacationDates = (vacationName, startDate, endDate, displayVacationStartDate, displayVacationEndDate) => {\r\n    let foundVacation = vacations.find(item => item.name == vacationName)\r\n    foundVacation.startDate = startDate\r\n    foundVacation.endDate = endDate\r\n    displayVacationStartDate.innerText = convertDate(startDate)\r\n    displayVacationEndDate.innerText = convertDate(endDate)\r\n    createArrayDates(vacationName)\r\n    createArrVacations()\r\n}\n;// CONCATENATED MODULE: ./src/modules/holidays/vacation-add.js\n\r\n\r\n\r\nconst addNewVacation = (vacationName, startDate, endDate) => {\r\n\r\n    vacations.push({\r\n        name: vacationName,\r\n        startDate: startDate,\r\n        endDate: endDate,\r\n        dates: []\r\n    })\r\n\r\n    document.getElementById(\'vacations\').innerHTML += `\r\n        <div class="d-flex justify-content-between align-items-center mb-2">\r\n            <div>з <span>${convertDate(startDate)}</span> до <span>${convertDate(endDate)}</span> </div>\r\n            <div>\r\n                <button type="button" class="btn btn-primary" name="btnEditVacation" data-vacation-name=\'${vacationName}\' data-bs-toggle="modal" data-bs-target="#modalEditVacationDates">\r\n                    <i class="bi bi-pencil-square"></i>\r\n                </button>\r\n                <button type="button" class="btn btn-primary" name="btnDeleteVacation" data-vacation-name=\'${vacationName}\' data-bs-toggle="modal" data-bs-target="#modalDeleteVacation">\r\n                    <i class="bi bi-x-square"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    `\r\n    createArrayDates(vacationName)\r\n    createArrVacations()\r\n}\n;// CONCATENATED MODULE: ./src/modules/holidays/modal-edit-vacations.js\n\r\n\r\n\r\n\r\n\r\nconst editVacations = () => {\r\n  const modalEditVacationDates = new bootstrap.Modal("#modalEditVacationDates")\r\n  const formEditVacationDates = document.getElementById("formEditVacationDates")\r\n\r\n  let vacationName\r\n  let newVacationName = 0\r\n  let displayVacationStartDate\r\n  let displayVacationEndDate\r\n  let flag\r\n\r\n  const clickBtnEditVacation = () => {\r\n    for (let btn of document.getElementsByName("btnEditVacation")) {\r\n      btn.addEventListener("click", () => {\r\n        flag = "edit"\r\n        vacationName = btn.dataset.vacationName\r\n        displayVacationStartDate = btn.parentElement.previousElementSibling.firstElementChild\r\n        displayVacationEndDate = btn.parentElement.previousElementSibling.lastElementChild\r\n\r\n        let foundVacation = vacations.find((item) => item.name == vacationName)\r\n        formEditVacationDates[0].value = foundVacation.startDate\r\n        formEditVacationDates[1].value = foundVacation.endDate\r\n      })\r\n    }\r\n  }\r\n  clickBtnEditVacation()\r\n\r\n  document.getElementById("btnAddVacation").addEventListener("click", () => {\r\n    flag = "add"\r\n    newVacationName ++\r\n    vacationName = newVacationName\r\n  })\r\n\r\n  // действия при закрытии модального окна без сохранения изменений\r\n  modalEditVacationDates._element.addEventListener("hidden.bs.modal", (e) => {\r\n    formEditVacationDates.reset()\r\n    formEditVacationDates.classList.remove("was-validated")\r\n    document.querySelector(".validationRange").classList.add("d-none")\r\n    for (let item of formEditVacationDates.inputVacationDate) {\r\n      item.classList.remove("is-invalid")\r\n      item.classList.remove("is-valid")\r\n    }\r\n  })\r\n\r\n  // проверка ввода правильного диапазона дат\r\n  let validationRange = true\r\n  for (let item of formEditVacationDates.inputVacationDate) {\r\n    item.addEventListener("change", () => {\r\n      if (formEditVacationDates[0].value != "" && formEditVacationDates[1].value != "") {\r\n        if (formEditVacationDates[0].value > formEditVacationDates[1].value) {\r\n          formEditVacationDates.classList.remove("was-validated")\r\n          document.querySelector(".validationRange").classList.remove("d-none")\r\n          formEditVacationDates[0].classList.remove("is-valid")\r\n          formEditVacationDates[1].classList.remove("is-valid")\r\n          formEditVacationDates[0].classList.add("is-invalid")\r\n          formEditVacationDates[1].classList.add("is-invalid")\r\n          validationRange = false\r\n        } else {\r\n          document.querySelector(".validationRange").classList.add("d-none")\r\n          formEditVacationDates[0].classList.remove("is-invalid")\r\n          formEditVacationDates[1].classList.remove("is-invalid")\r\n          formEditVacationDates[0].classList.add("is-valid")\r\n          formEditVacationDates[1].classList.add("is-valid")\r\n          validationRange = true\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  // обработка формы изменения новых дат каникул\r\n  formEditVacationDates.addEventListener("submit", function (e) {\r\n    e.preventDefault()\r\n\r\n    if (validationRange == true) {\r\n      this.classList.add("was-validated")\r\n      if (this.checkValidity()) {\r\n        let startDate = this[0].value\r\n        let endDate = this[1].value\r\n\r\n        if (flag == "add") {\r\n          addNewVacation(vacationName, startDate, endDate)\r\n          clickBtnEditVacation()\r\n          clickBtnDeleteVacation()\r\n        } else if (flag == "edit") {\r\n          editVacationDates(vacationName, startDate, endDate, displayVacationStartDate, displayVacationEndDate\r\n          )\r\n        }\r\n\r\n        modalEditVacationDates.hide()\r\n        this.classList.remove("was-validated")\r\n        this.reset()\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/* harmony default export */ const modal_edit_vacations = (editVacations);\r\n\n;// CONCATENATED MODULE: ./src/modules/holidays/current-period.js\nconst now = new Date()\r\n\r\nlet firstSemesterYear\r\nlet secondSemesterYear\r\n\r\nif (now.getMonth() >= 0 && now.getMonth() < 6) {\r\n  firstSemesterYear = now.getFullYear() - 1\r\n  secondSemesterYear = now.getFullYear()\r\n} else {\r\n  firstSemesterYear = now.getFullYear()\r\n  secondSemesterYear = now.getFullYear() + 1\r\n}\r\n\r\n// вывод периода в заголовке\r\nconst title = document.getElementById("title")\r\ntitle.firstElementChild.innerText = firstSemesterYear\r\ntitle.lastElementChild.innerText = secondSemesterYear\r\n\r\n\n;// CONCATENATED MODULE: ./src/modules/main-form/default-periods.js\n\r\n\r\nconst defaultPeriods = () => {\r\n  document.getElementById("btnFirstSemester").addEventListener("click", () => {\r\n    document.getElementById("start-date").value = `${firstSemesterYear}-09-01`\r\n    document.getElementById("end-date").value = `${firstSemesterYear}-12-31`\r\n  })\r\n\r\n  document.getElementById("btnSecondSemester").addEventListener("click", () => {\r\n    document.getElementById("start-date").value = `${secondSemesterYear}-01-01`\r\n    document.getElementById("end-date").value = `${secondSemesterYear}-05-31`\r\n  })\r\n}\r\n\r\n/* harmony default export */ const default_periods = (defaultPeriods);\n;// CONCATENATED MODULE: ./src/modules/main-form/count-lessons.js\nconst countLessons = () => {\r\n  const numberOfLessons = document.getElementsByName("numberOfLessons")\r\n\r\n  document.getElementsByName("day").forEach((item, index) => {\r\n    item.addEventListener("change", () => {\r\n      if (numberOfLessons[index].hasAttribute("disabled")) {\r\n        numberOfLessons[index].removeAttribute("disabled")\r\n      } else {\r\n        numberOfLessons[index].setAttribute("disabled", "disabled")\r\n      }\r\n\r\n      document.getElementById(\'feedbackCheckbox\').classList.add("d-none")\r\n    })\r\n  })\r\n}\r\n\r\n/* harmony default export */ const count_lessons = (countLessons);\n;// CONCATENATED MODULE: ./src/modules/main-form/modal-count-lessons.js\nconst modalCountLessons = () => {\r\n  const modalNumberOfLessons = new bootstrap.Modal("#modalNumberOfLessons")\r\n  const selectsNumberOfLessons = document.querySelectorAll(".selectNumberOfLessons")\r\n  const inputsNumderOfLessons = document.querySelectorAll(".inputNumderOfLessons")\r\n  const inputsRadioWeek = document.getElementsByName("radioWeek")\r\n  const inputEveryWeek = document.getElementById("inputEveryWeek")\r\n  const inputOddWeeks = document.getElementById("inputOddWeeks")\r\n  const inputEvenWeeks = document.getElementById("inputEvenWeeks")\r\n  const formChangeNumber = document.forms.changeNumberOfLessons\r\n\r\n  let weekDay\r\n\r\n  // вызов модального окна ввода количества уроков\r\n  selectsNumberOfLessons.forEach((item, index) => {\r\n    item.addEventListener("change", () => {\r\n      if (item.value == "other") {\r\n        modalNumberOfLessons.show()\r\n        weekDay = index\r\n      }\r\n    })\r\n  })\r\n\r\n  // действия при закрытии модального окна без сохранения изменений\r\n  modalNumberOfLessons._element.addEventListener("hidden.bs.modal", (e) => {\r\n    formChangeNumber.reset()\r\n    formChangeNumber.classList.remove("was-validated")\r\n\r\n    for (let elem of inputsNumderOfLessons) {\r\n      elem.setAttribute("disabled", "disabled")\r\n    }\r\n\r\n    if (selectsNumberOfLessons[weekDay].value == "other") {\r\n      selectsNumberOfLessons[weekDay].value = "1"\r\n    }\r\n  })\r\n\r\n  // активация/деактивация полей ввода количества уроков\r\n  for (let node of inputsRadioWeek) {\r\n    node.addEventListener("change", () => {\r\n      for (let elem of inputsNumderOfLessons) {\r\n        elem.setAttribute("disabled", "disabled")\r\n        elem.value = ""\r\n      }\r\n      for (let elem of node.parentElement.getElementsByTagName("*")) {\r\n        if (elem.classList.contains("inputNumderOfLessons")) {\r\n          elem.removeAttribute("disabled")\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  // подставление 0 в поле при заполнении только четного/нечетного поля\r\n  formChangeNumber.inWeek.forEach((item, index) => {\r\n    item.addEventListener("input", () => {\r\n      formChangeNumber.inWeek.forEach((it, ind) => {\r\n        if (ind != index && it.value == "") {\r\n          it.value = "0"\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  // обработка данных полей ввода количества уроков\r\n  formChangeNumber.addEventListener("submit", function(e) {\r\n    e.preventDefault()\r\n    this.classList.add("was-validated")\r\n\r\n    if (this.checkValidity()) {\r\n      // добавление нового элемента option в зависимости от выбора\r\n      let option\r\n      for (let node of inputsRadioWeek) {\r\n        if (node.checked && node.id == "radioEveryWeek") {\r\n          option = new Option(\r\n            inputEveryWeek.value,\r\n            inputEveryWeek.value,\r\n            false,\r\n            true\r\n          )\r\n        } else if (node.checked && node.id == "radioInAWeek") {\r\n          option = new Option(\r\n            inputOddWeeks.value + "/" + inputEvenWeeks.value,\r\n            inputOddWeeks.value + "/" + inputEvenWeeks.value,\r\n            false,\r\n            true\r\n          )\r\n        }\r\n      }\r\n      // проверка не дублируется ли option\r\n      let n = 0\r\n      for (let elem of selectsNumberOfLessons[weekDay].options) {\r\n        if (elem.value == option.value) {\r\n          n++\r\n        }\r\n      }\r\n      if (n == 0) {\r\n        selectsNumberOfLessons[weekDay].prepend(option)\r\n      } else {\r\n        selectsNumberOfLessons[weekDay].value = option.value\r\n      }\r\n\r\n      modalNumberOfLessons.hide()\r\n    }\r\n  })\r\n}\r\n\r\n/* harmony default export */ const modal_count_lessons = (modalCountLessons);\n;// CONCATENATED MODULE: ./src/modules/holidays/holidays.js\n\r\n\r\n\r\n// официальные праздничные дни\r\nconst holidays = [\r\n  {\r\n    name: "День української державності",\r\n    date: firstSemesterYear + "-07-28",\r\n  },\r\n  {\r\n    name: "День Незaлежності України",\r\n    date: firstSemesterYear + "-08-24",\r\n  },\r\n  {\r\n    name: "День захисників і захисниць України",\r\n    date: firstSemesterYear + "-10-14",\r\n  },\r\n  {\r\n    name: "Різдво Христове",\r\n    date: firstSemesterYear + "-12-25",\r\n  },\r\n  {\r\n    name: "Новий рік",\r\n    date: secondSemesterYear + "-01-01",\r\n  },\r\n  {\r\n    name: "Різдво Христове",\r\n    date: secondSemesterYear + "-01-07",\r\n  },\r\n  {\r\n    name: "Міжнародний жіночий день",\r\n    date: secondSemesterYear + "-03-08",\r\n  },\r\n  {\r\n    name: "Великдень",\r\n    date: secondSemesterYear + "-04-16",\r\n  },\r\n  {\r\n    name: "День праці",\r\n    date: secondSemesterYear + "-05-01",\r\n  },\r\n  {\r\n    name: "День Перемоги",\r\n    date: secondSemesterYear + "-05-09",\r\n  },\r\n  {\r\n    name: "свято Трійці",\r\n    date: secondSemesterYear + "-06-04",\r\n  },\r\n  {\r\n    name: "День Конституції України",\r\n    date: secondSemesterYear + "-06-28",\r\n  },\r\n]\r\n\r\nconst arrHolidays = []\r\n\r\n// вывод празднтков на странице\r\nfor (let item of holidays) {\r\n  let date = new Date(item.date)\r\n\r\n  // arrHolidays.push(date.getTime())\r\n\r\n  document.getElementById("collapseHolidays").innerHTML += `\r\n          <p>${date.getDate()} ${getMonthName(date)} — ${item.name}</p>\r\n      `\r\n}\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/modules/main-form/output.js\n\r\n\r\nconst outDate = document.getElementById("out-date")\r\nconst outCount = document.getElementById("out-count")\r\nconst outDay = document.getElementById("out-day")\r\nconst outTable = document.getElementById("out-table")\r\n\r\n// функция очистки поля\r\nconst outputReset = () => {\r\n  outDate.innerHTML = ""\r\n  outCount.innerHTML = ""\r\n  outDay.innerHTML = ""\r\n  outTable.innerHTML = ""\r\n}\r\n\r\n// функция выводв шапки таблицы\r\nconst outputHead = () => {\r\n  outCount.innerHTML += `\r\n                <tr>\r\n                    <th>п/н</th>\r\n                </tr>\r\n            `\r\n\r\n  outDate.innerHTML += `\r\n                <tr>\r\n                    <th>дата</th>\r\n                </tr>\r\n            `\r\n\r\n  outDay.innerHTML += `\r\n                <tr>\r\n                    <th>д/т</th>\r\n                </tr>\r\n            `\r\n\r\n  outTable.innerHTML += `\r\n                <tr>\r\n                    <th>п/н</th>\r\n                    <th>дата</th>\r\n                    <th>д/т</th>\r\n                </tr>\r\n            `\r\n}\r\n\r\n// функция выводв результата\r\nconst outputTable = (number, date, sn) => {\r\n  for (let i = 0; i < number; i++) {\r\n    outCount.innerHTML += `\r\n                <tr>\r\n                    <td>${sn}</td>\r\n                </tr>\r\n            `\r\n\r\n    outDate.innerHTML += `\r\n                <tr>\r\n                    <td>${convertDate(date)}</td>\r\n                </tr>\r\n            `\r\n\r\n    outDay.innerHTML += `\r\n                <tr>\r\n                    <td>${getWeekDayAbbr(date)}</td>\r\n                </tr>\r\n            `\r\n\r\n    outTable.innerHTML += `\r\n                <tr>\r\n                    <td>${sn}</td>\r\n                    <td>${convertDate(date)}</td>\r\n                    <td>${getWeekDayAbbr(date)}</td>\r\n                </tr>\r\n            `\r\n    \r\n    sn ++\r\n  }\r\n  return sn\r\n}\n;// CONCATENATED MODULE: ./src/modules/main-form/form.js\n\r\n\r\n\r\n\r\n\r\nconst form_form = () => {\r\n\r\n  const startDate = document.getElementById("start-date")\r\n  const endDate = document.getElementById("end-date")\r\n  \r\n  document.getElementById("form-main").addEventListener("submit", function(e) {\r\n    e.preventDefault()\r\n    outputReset()\r\n    document.getElementById("exportXLSX").classList.add("d-none")\r\n\r\n    this.classList.add("was-validated")\r\n\r\n    if (this.checkValidity()) {\r\n\r\n      let daysWeek = []\r\n      let checked = false\r\n\r\n      for (let elem of document.getElementsByName("day")) {\r\n        if (elem.checked) {\r\n          daysWeek.push(+elem.value)\r\n          checked = true\r\n        }\r\n      }\r\n\r\n      // проверка ввода правильного диапазона дат\r\n      if (endDate.value < startDate.value) {\r\n        document.getElementById(\'feedbackRange\').classList.remove("d-none")\r\n        startDate.classList.add("is-invalid")\r\n        endDate.classList.add("is-invalid")\r\n        for (let item of document.getElementsByName(\'range\')) {\r\n          item.addEventListener(\'change\', () => {\r\n            if (endDate.value >= startDate.value) {\r\n              document.getElementById(\'feedbackRange\').classList.add("d-none")\r\n              startDate.classList.remove("is-invalid")\r\n              endDate.classList.remove("is-invalid")\r\n            }\r\n          })\r\n        }\r\n      }\r\n\r\n      // проверка выбраны ли дни с выводом предупреждения\r\n      checked == false\r\n        ? document.getElementById(\'feedbackCheckbox\').classList.remove("d-none")\r\n        : document.getElementById(\'feedbackCheckbox\').classList.add("d-none")\r\n\r\n      if (checked == true && endDate.value >= startDate.value) {\r\n\r\n        const start = Date.parse(startDate.value)\r\n        const end = Date.parse(endDate.value)\r\n\r\n        let sn = document.getElementById("initialNumber").value\r\n\r\n        document.getElementById(\'spinner\').classList.remove(\'d-none\')\r\n        document.getElementById(\'output\').classList.add(\'d-none\')\r\n        outputHead()\r\n        document.getElementById("exportXLSX").classList.remove("d-none")\r\n\r\n        // перебор всех дат в выбранном промежутке\r\n        for (let i = start; i <= end; i = i + 24 * 60 * 60 * 1000) {\r\n          // дата не должна входить в праздники и каникулы\r\n          if (!arrHolidays.includes(i) && !arrVacations.includes(i)) {\r\n            let date = new Date(i)\r\n\r\n            // проверка входит ли дата в массив дней недели\r\n            if (daysWeek.includes(date.getDay())) {\r\n              // значение количества уроков в день из select\r\n              let number = document.getElementsByName("numberOfLessons")[date.getDay() - 1].value\r\n              let numberValue = number.match(/\\d/g)\r\n\r\n              if (numberValue.length == 2) {\r\n                if (getWeek(i, start) == "odd") {\r\n                  sn = outputTable(numberValue[0], i, sn)\r\n                } else if (getWeek(i, start) == "even") {\r\n                  sn = outputTable(numberValue[1], i, sn)\r\n                }\r\n              } else {\r\n                sn= outputTable(numberValue[0], i, sn)\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        setTimeout(() => {\r\n          document.getElementById(\'spinner\').classList.add(\'d-none\')\r\n          document.getElementById(\'output\').classList.remove(\'d-none\')\r\n        }, 500);\r\n\r\n      }\r\n\r\n      this.classList.remove("was-validated")\r\n    }\r\n  })\r\n}\r\n\r\n/* harmony default export */ const main_form_form = (form_form);\r\n\n;// CONCATENATED MODULE: ./src/modules/main-form/exportXLSX.js\nconst exportXLSX = () => {\r\n  document.getElementById("exportXLSX").addEventListener(\'click\', function() {\r\n    let wb = XLSX.utils.table_to_book(document.getElementById("out-table"));\r\n    XLSX.writeFile(wb, "calendar-plan.xlsx");\r\n  })\r\n}\r\n\r\n/* harmony default export */ const main_form_exportXLSX = (exportXLSX);\n;// CONCATENATED MODULE: ./src/index.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nmodal_edit_vacations()\r\ndefault_periods()\r\ncount_lessons()\r\nmodal_count_lessons()\r\nmain_form_form()\r\nmain_form_exportXLSX()//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///828\n')}},__webpack_exports__={};__webpack_modules__[828]()})();