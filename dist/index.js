(()=>{"use strict";var __webpack_modules__={681:()=>{eval("\n;// CONCATENATED MODULE: ./src/modules/dates.js\n// официальные праздничные дни и перенесенные при совпадении праздничных и рабочих\r\nconst holidays = [\r\n    // Date.parse('2021-10-14'),\r\n    // Date.parse('2021-12-27'),\r\n    // Date.parse('2022-01-01'),\r\n    // Date.parse('2022-01-03'),\r\n    // Date.parse('2022-01-07'),\r\n    // Date.parse('2022-03-08'),\r\n    // Date.parse('2022-04-24'),\r\n    // Date.parse('2022-04-25'),\r\n    // Date.parse('2022-05-01'),\r\n    // Date.parse('2022-05-02'),\r\n    // Date.parse('2022-05-09'),\r\n    // Date.parse('2022-06-12'),\r\n    // Date.parse('2022-06-13'),\r\n    // Date.parse('2022-06-28'),\r\n    // Date.parse('2022-08-24'),\r\n]\r\n\r\n// перенос рабочих дней по рекомендации правительства\r\n// const transferFrom1 = Date.parse('2021-10-15');\r\n// const transferTo1 = Date.parse('2021-10-23');\r\n\r\n// const transferFrom2 = Date.parse('2022-03-07');\r\n// const transferTo2 = Date.parse('2022-03-12');\r\n\r\n// const transferFrom3 = Date.parse('2022-06-27');\r\n// const transferTo3 = Date.parse('2022-07-02');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/modules/vacations.js\n//========= Каникулы =========================================\r\n\r\nconst vacation = [\r\n    {\r\n        name: 'vacationFall',\r\n        startDate: '2022-10-22',\r\n        endDate: '2022-10-30',\r\n        dates: []\r\n    },\r\n    {\r\n        name: 'vacationWinter',\r\n        startDate: '2022-12-24',\r\n        endDate: '2023-01-08', \r\n        dates: []\r\n    },\r\n    {\r\n        name: 'vacationSpring',\r\n        startDate: '2023-03-25',\r\n        endDate: '2023-04-02',\r\n        dates: []\r\n    }\r\n]\r\n\r\n\r\n\r\n\r\nconst createArrayDates = (vacationName) => {\r\n    let findVacation = vacation.find( item => item.name == vacationName)\r\n    findVacation.dates = []\r\n    for (let i = Date.parse(findVacation.startDate); i <= Date.parse(findVacation.endDate); i = i + 1000 * 3600 * 24) {\r\n        findVacation.dates.push(i)\r\n    }\r\n}\r\n\r\ncreateArrayDates('vacationFall')\r\ncreateArrayDates('vacationWinter')\r\ncreateArrayDates('vacationSpring')\r\n\r\n\r\n//===== Формирование массива дат всех каникул ===========\r\n\r\nlet vacations = []\r\nconst createVacations = () => {\r\n    vacations = []\r\n    vacation.forEach(item => {\r\n        vacations = vacations.concat(item.dates)\r\n    })\r\n}\r\ncreateVacations()\r\n\r\n\r\n// ======= Редактирование дат каникул =====================================\r\n\r\nconst btnEditVacation = document.querySelectorAll('.btn-editVacation')\r\nconst editDatesVacation = document.getElementById('editDatesVacation')\r\nconst modalChangeDate = new bootstrap.Modal('#modalChangeDate') \r\nconst dateStartModal = document.getElementById('dateStartModal')\r\nconst dateEndModal = document.getElementById('dateEndModal')\r\n\r\nlet vacationName\r\nlet startDateVacation\r\nlet endDateVacation\r\n\r\n//===== преобразование даты к виду ДД.ММ.ГГГГ =====\r\nconst transformationDate = (data) => {\r\n    let date = new Date(data)\r\n    \r\n    let day = date.getDate();\r\n    if (day < 10) {\r\n        day = '0' + day;\r\n    }\r\n    let month = date.getMonth() + 1;\r\n    if (month < 10) {\r\n        month = '0' + month;\r\n    }\r\n    let year = date.getFullYear();\r\n\r\n    let fullDate = day + '.' + month + '.' + year;\r\n\r\n    return fullDate\r\n}\r\n\r\nconst changeDatesVacation = (vacationName) => {\r\n    let findVacation = vacation.find(item => item.name == vacationName)\r\n    findVacation.startDate = dateStartModal.value\r\n    findVacation.endDate = dateEndModal.value\r\n    startDateVacation.innerText = transformationDate(dateStartModal.value)\r\n    endDateVacation.innerText = transformationDate(dateEndModal.value)\r\n}\r\n\r\nbtnEditVacation.forEach(el => {\r\n    \r\n    el.addEventListener('click', () => {\r\n        vacationName = el.dataset.vacationName\r\n        startDateVacation = el.previousElementSibling.firstElementChild\r\n        endDateVacation = el.previousElementSibling.lastElementChild\r\n    })\r\n\r\n}) \r\n\r\neditDatesVacation.addEventListener('submit', (e) => {\r\n    e.preventDefault()\r\n    editDatesVacation.classList.add('was-validated')\r\n    if (editDatesVacation.checkValidity()) {\r\n        changeDatesVacation(vacationName)\r\n        createArrayDates(vacationName)\r\n        createVacations()\r\n        modalChangeDate.hide()\r\n        editDatesVacation.classList.remove('was-validated')\r\n        editDatesVacation.reset()\r\n        \r\n    }\r\n})\r\n\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/modules/form.js\n\r\n\r\n\r\n\r\nconst form_form = () => {\r\n\r\n    const btnFirstSemester = document.querySelector('.first-semester')\r\n    const btnSecondSemester = document.querySelector('.second-semester')\r\n    const feedbackCheckbox = document.querySelector('.invalid-feedback-checkbox')\r\n    const dateStart = document.getElementById('start-date')\r\n    const dateEnd = document.getElementById('end-date')\r\n    const out = document.getElementById('out')\r\n    const formMain = document.getElementById('form-main')\r\n\r\n\r\n    btnFirstSemester.addEventListener('click', () => {\r\n        dateStart.value = '2022-09-01';\r\n        dateEnd.value = '2022-12-23';\r\n    }) \r\n\r\n    btnSecondSemester.addEventListener('click', () => {\r\n        dateStart.value = '2023-01-09';\r\n        dateEnd.value = '2023-06-30';\r\n    })\r\n\r\n\r\n\r\n    formMain.addEventListener('submit', (e) => {\r\n        e.preventDefault();\r\n        out.innerHTML = '';\r\n        formMain.classList.add('was-validated')\r\n        if (formMain.checkValidity()) {\r\n\r\n            const start = Date.parse(dateStart.value);\r\n            const end = Date.parse(dateEnd.value);\r\n\r\n            let daysWeek = [];\r\n            let checks = document.getElementsByName('day');\r\n            let n = 0;\r\n\r\n            for (let i = 0; i < checks.length; i++) {\r\n                if (checks[i].checked) {\r\n                    n++\r\n                    daysWeek.push(+checks[i].value);\r\n                }\r\n                \r\n            }\r\n\r\n            (n == 0) ? feedbackCheckbox.classList.remove('d-none') : feedbackCheckbox.classList.add('d-none')\r\n\r\n\r\n            for (let i = start; i <= end; i=i+24*60*60*1000) {\r\n\r\n                let date = new Date(i);\r\n                if (daysWeek.includes(date.getDay()) && !holidays.includes(i) && !vacations.includes(i)) {\r\n\r\n                    // if (i == transferFrom1) {\r\n                    //     date = new Date(transferTo1);\r\n                    // } else if (i == transferFrom2) {\r\n                    //     date = new Date(transferTo2);\r\n                    // } else if (i == transferFrom3) {\r\n                    //     date = new Date(transferTo3);\r\n                    // }\r\n\r\n                    // преобразование даты к виду ДД.ММ.ГГГГ\r\n                    let day = date.getDate();\r\n                    if (day < 10) {\r\n                        day = '0' + day;\r\n                    }\r\n                    let month = date.getMonth() + 1;\r\n                    if (month < 10) {\r\n                        month = '0' + month;\r\n                    }\r\n                    let year = date.getFullYear();\r\n\r\n                    let fullDate = day + '.' + month + '.' + year;\r\n                    out.innerHTML += `\r\n                        <tr>\r\n                                <td>${fullDate}</td>\r\n                            </tr>\r\n                        `\r\n                }\r\n            }\r\n\r\n            formMain.classList.remove('was-validated')\r\n\r\n        }   \r\n\r\n    });\r\n\r\n\r\n    function getWeekDay(date) {\r\n        let days = ['н', ['пн'], ['в'], ['c'], ['ч'], ['пт'], ['сб']]\r\n\r\n        return days[date.getDay()]\r\n    }\r\n}\r\n\r\n/* harmony default export */ const modules_form = (form_form);\n;// CONCATENATED MODULE: ./src/index.js\n\r\n// import validationForm from './modules/validationForm'\r\n\r\n// validationForm()\r\nmodules_form()\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///681\n")}},__webpack_exports__={};__webpack_modules__[681]()})();